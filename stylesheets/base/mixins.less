.permalink (@color: white) {
    color: @color;
    text-decoration: none;
    &:visited {
        color: @color;
    }

    &:hover, &:focus, &:active {
		color: @color;
        text-decoration: underline;
    }
}

.clearfix() {
    &:before {
        content: "";
        display: table;
    }

    &:after {
        content: "";
        display: table;
        clear: both;
    }

    *zoom: 1;
}

.text-shadow (@string: 0 1px 3px rgba(0, 0, 0, 0.25)) {
	text-shadow: @string;
}

.clearfixsmall() {
    &:after {
        content: '';
        display: block;
        clear: both;
	}
}

.box-shadow (@string) {
	-webkit-box-shadow: @string;
	-moz-box-shadow:    @string;
	box-shadow:         @string;
}
.box-shadow-x2 (@string, @string2) {
	-webkit-box-shadow: @string, @string2;
	-moz-box-shadow:    @string, @string2;
	box-shadow:         @string, @string2;
}
.box-shadow-x3 (@string, @string2, @string3) {
	-webkit-box-shadow: @string, @string2, @string3;
	-moz-box-shadow:    @string, @string2, @string3;
	box-shadow:         @string, @string2, @string3;
}
.box-shadow-x4 (@string, @string2, @string3, @string4) {
	-webkit-box-shadow: @string, @string2, @string3, @string4;
	-moz-box-shadow:    @string, @string2, @string3, @string4;
	box-shadow:         @string, @string2, @string3, @string4;
}
.drop-shadow (@x: 0, @y: 1px, @blur: 2px, @spread: 0, @alpha: 0.25) {
	-webkit-box-shadow:	@x @y @blur @spread rgba(0, 0, 0, @alpha);
	-moz-box-shadow:	@x @y @blur @spread rgba(0, 0, 0, @alpha);
	box-shadow:		@x @y @blur @spread rgba(0, 0, 0, @alpha);
}
.inner-shadow (@x: 0, @y: 1px, @blur: 2px, @spread: 0, @alpha: 0.25) {
	-webkit-box-shadow: inset @x @y @blur @spread rgba(0, 0, 0, @alpha);
	-moz-box-shadow:    inset @x @y @blur @spread rgba(0, 0, 0, @alpha);
	box-shadow:         inset @x @y @blur @spread rgba(0, 0, 0, @alpha);
}

.box-sizing (@type: border-box) {
	-webkit-box-sizing: @type;
	-moz-box-sizing:    @type;
	box-sizing:         @type;
}

.border-radius (@radius: 5px) {
	-webkit-border-radius: @radius;
	-moz-border-radius:    @radius;
	border-radius:         @radius;

	-moz-background-clip:    padding;
	-webkit-background-clip: padding-box;
	background-clip:         padding-box;
}

.border-radiuses (@topright: 0, @bottomright: 0, @bottomleft: 0, @topleft: 0) {
	-webkit-border-top-right-radius:    @topright;
	-webkit-border-bottom-right-radius: @bottomright;
	-webkit-border-bottom-left-radius:  @bottomleft;
	-webkit-border-top-left-radius:     @topleft;

	-moz-border-radius-topright:        @topright;
	-moz-border-radius-bottomright:     @bottomright;
	-moz-border-radius-bottomleft:      @bottomleft;
	-moz-border-radius-topleft:         @topleft;

	border-top-right-radius:            @topright;
	border-bottom-right-radius:         @bottomright;
	border-bottom-left-radius:          @bottomleft;
	border-top-left-radius:             @topleft;

	-moz-background-clip:    padding;
	-webkit-background-clip: padding-box;
	background-clip:         padding-box;
}

.opacity (@opacity: 0.5) {
	-webkit-opacity: 	@opacity;
	-moz-opacity: 		@opacity;
	opacity: 		@opacity;
}

.gradient (@startColor: #eee , @endColor: white) {
	background-color: @startColor;
	background: -webkit-gradient(linear, left top, left bottom, from(@startColor), to(@endColor));
	background: -webkit-linear-gradient(top, @startColor, @endColor);
	background: -moz-linear-gradient(top, @startColor, @endColor);
	background: -ms-linear-gradient(top, @startColor, @endColor);
	background: -o-linear-gradient(top, @startColor, @endColor);
}
.radial-gradient (@startColor: white, @endColor: rgba(255,255,255,0)) {
	background: -moz-radial-gradient(center, ellipse cover,  @startColor 0%, rgba(255,255,255,0) 50%, rgba(255,255,255,0) 100%);
	background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%,@startColor), color-stop(50%,rgba(255,255,255,0)), color-stop(100%,rgba(255,255,255,0)));
	background: -webkit-radial-gradient(center, ellipse cover,  @startColor 0%,rgba(255,255,255,0) 50%,rgba(255,255,255,0) 100%);
	background: -o-radial-gradient(center, ellipse cover,  @startColor 0%,rgba(255,255,255,0) 50%,rgba(255,255,255,0) 100%);
	background: -ms-radial-gradient(center, ellipse cover,  @startColor 0%,rgba(255,255,255,0) 50%,rgba(255,255,255,0) 100%);
	background: radial-gradient(ellipse at center,  @startColor 0%,rgba(255,255,255,0) 50%,rgba(255,255,255,0) 100%);

}

.animation (@name, @duration: 300ms, @delay: 0, @ease: ease, @direction: normal, @iteration-count: 1, @fill-mode: none, @play-state: running) {
  animation:         @name @duration @ease @delay @iteration-count @direction @fill-mode @play-state;
	-webkit-animation: @name @duration @ease @delay @iteration-count @direction @fill-mode @play-state;
  -moz-animation:    @name @duration @ease @delay @iteration-count @direction @fill-mode @play-state;
  -ms-animation:     @name @duration @ease @delay @iteration-count @direction @fill-mode @play-state;
}

.transition (@transition) {
	-webkit-transition: @transition;
	-moz-transition:    @transition;
	-ms-transition:     @transition;
	-o-transition:      @transition;
}
.transition-delay (...) {
    -webkit-transition-delay: @arguments;
	-moz-transition-delay:    @arguments;
	-ms-transition-delay:     @arguments;
	-o-transition-delay:      @arguments;
}
.transition-timing-function (...) {
    -webkit-transition-timing-function: @arguments;
	-moz-transition-timing-function:    @arguments;
	-ms-transition-timing-function:     @arguments;
	-o-transition-timing-function:      @arguments;
}
.transition-duration (...) {
    -webkit-transition-duration: @arguments;
	-moz-transition-duration:    @arguments;
	-ms-transition-duration:     @arguments;
	-o-transition-duration:      @arguments;
}
.transition-property (...) {
    -webkit-transition-property: @arguments;
	-moz-transition-property:    @arguments;
	-ms-transition-property:     @arguments;
	-o-transition-property:      @arguments;
}
.transform(@string){
	-webkit-transform: @string;
	-moz-transform: 	 @string;
	-ms-transform: 		 @string;
	-o-transform: 		 @string;
}
.scale (@factor) {
	-webkit-transform: scale(@factor);
	-moz-transform: 	 scale(@factor);
	-ms-transform: 		 scale(@factor);
	-o-transform: 		 scale(@factor);
}
.rotate (@deg) {
	-webkit-transform: rotate(@deg);
	-moz-transform: 	 rotate(@deg);
	-ms-transform: 		 rotate(@deg);
	-o-transform: 		 rotate(@deg);
}
.skew (@deg, @deg2) {
	-webkit-transform:       skew(@deg, @deg2);
	-moz-transform: 	 skew(@deg, @deg2);
	-ms-transform: 		 skew(@deg, @deg2);
	-o-transform: 		 skew(@deg, @deg2);
}
.translate (@x, @y:0) {
	-webkit-transform:       translate(@x, @y);
	-moz-transform: 	 translate(@x, @y);
	-ms-transform: 		 translate(@x, @y);
	-o-transform: 		 translate(@x, @y);
}
.translate3d (@x, @y: 0, @z: 0) {
	-webkit-transform:       translate3d(@x, @y, @z);
	-moz-transform: 	 translate3d(@x, @y, @z);
	-ms-transform: 		 translate3d(@x, @y, @z);
	-o-transform: 		 translate3d(@x, @y, @z);
}
.perspective (@value: 1000) {
	-webkit-perspective: 	@value;
	-moz-perspective: 	@value;
	-ms-perspective: 	@value;
	perspective: 		@value;
}
.transform-origin (@x:center, @y:center) {
	-webkit-transform-origin: @x @y;
	-moz-transform-origin:    @x @y;
	-ms-transform-origin:     @x @y;
	-o-transform-origin:      @x @y;
}
.fontRegular() {
	font-family: @fontFamily;
    font-weight: 300;
}
.fontsMedium() {
	font-family: @fontFamily;
    font-weight: 500;
}
.fontsBold() {
	font-family: @fontFamily;
    font-weight: 700;
}
.defaultButton() {
	font-size: @fontSizeLarger;
    padding: 12px @defaultGutter 13px;
    line-height: 19px;
    text-align: center;
    cursor: pointer;
    width: auto;
	text-transform: uppercase;
	min-width: 80px;
	color: @colorWhite;
	border: 0;
    -webkit-border-radius:0;
    border-radius: 0;
	&:hover {
		color: @colorWhite;
	}
	&:visited, &:focus, &:active {
        color: @colorWhite;
    }
}

.formCommonSettings() {
	outline: none;
    padding: 6px 7px 4px;
	font-size: @fontSize;
	line-height:normal;
    border: 1px solid @rgbInputborderClr;
    display: inline-block;
    box-sizing: border-box;
    margin-bottom: @defaultGutter/5;
    .border-radius(0px);
    .box-shadow-x4(0px,0,5px,@rgbaInputAcctPage);
    &::-webkit-input-placeholder { /* Chrome/Opera/Safari */
        color: @colorGray;
    }
    &::-moz-placeholder { /* Firefox 19+ */
        color: @colorGray;
    }
    &:-ms-input-placeholder { /* IE 10+ */
        color: @colorGray;
    }
    &:-moz-placeholder { /* Firefox 18- */
        color: @colorGray;
    }
    &:focus { /* Chrome, Firefox, Opera, Safari 10.1+ */
        color: @colorGray;
        .box-shadow-x4(0px,0,5px,@colorGray);
        border: 1px solid @colorGray;
        outline: none;
    }
    &.is-invalid{
    	border: 1px solid @red;
    	background-color: @colorWhite;
    }
}
.formInput() {
	.formCommonSettings();
	width: 240px;
    height: 34px;
}
.formFieldStyle() {
	.formCommonSettings();
}
.border-radius-plain(@radius: 5px) {
  -webkit-border-radius: @radius;
  -moz-border-radius: @radius;
  border-radius: @radius;
}
.close-icon(@size: 40px, @color: #000000, @top: 3px){
	position: absolute;
    right: 0;
    top: @top;
    width: @size;
    height: @size;
    cursor: pointer;
    &:before, &:after {
		height: @size;
		position: absolute;
		left: @size/2;
		content: ' ';
		width: 1px;
		background-color: @color;
	}
    &:before {
     	-webkit-transform: rotate(45deg);
		-moz-transform: rotate(45deg);
		-ms-transform: rotate(45deg);
     	transform: rotate(45deg);
    }
    &:after {
     	-webkit-transform: rotate(-45deg);
		-moz-transform: rotate(-45deg);
		-ms-transform: rotate(-45deg);
     	transform: rotate(-45deg);
    }
}
.no-image(@width: 80px, @height: 80px) {
	width: @width;
	height: @height;
	line-height: @height;
	background: @colorLightGray;
	text-align: center;
	color: @colorLighterGray;
	&>.mz-productlisting-imageplaceholdertext {
		line-height: @height;
	}
}
/* meida query mixins START */

// Breakpoints
// ------------------------- Source: http://blog.scur.pl/2012/06/variable-media-queries-less-css/
@highdensity:         ~"only screen and (-webkit-min-device-pixel-ratio: 1.5)",
                      ~"only screen and (min--moz-device-pixel-ratio: 1.5)",
                      ~"only screen and (-o-min-device-pixel-ratio: 3/2)",
			                ~"only screen and (min-device-pixel-ratio: 1.5)";

@mobile:              ~"only screen and (max-width: 767px)";

@mobile-sm-bootstrap: ~"only screen and (max-width : 480px)";

@tablet:              ~"only screen and (max-width: 1024px)";

@tablet-only:         ~"only screen and (min-width: 768px) and (max-width: 1024px)";

@desktop-bootstrap:   ~"only screen and (max-width: 992px)";

@desktop:             ~"only screen and (max-width: 1199px)";

@desktop-only:        ~"only screen and (min-width: 1025px) and (max-width: 1199px)";

@desktop-xl:          ~"only screen and (min-width: 1200px)";

/*  TEMPLATE HOW TO USE

section {
	margin: 3%;

	@media @mobile {
		display: block;
		margin-top: 4em;
		width: 85%;
	}

	@media @tablet {
		width: 37%;
	}

	@media @desktop, @desktop-xl {
		width: 40%;
	}
}
END TEMPLATE HOW TO USE */

/* END meida query mixins */

/*-------------------------------------------------------------------*/

/* ICONS mixin - fontawesome START */


/*
HOW TO USE - UPDATED

Use mixin .icon(before/aftrer, 105, solid/regular/brand, 11px);

1) before/after - before or after position - :before or :after;

2) 105 (second attribute) - icon number from fontawesome icons list https://fontawesome.com/icons
example:

#main {
	...
	.icon(before, 105, regular); Put the icon number from fontawesome icons list https://fontawesome.com/icons
	Without first letter - Use just a number (Use 105 instead of f105).
	...
}

Icon (>) will be added to main block on before position;

IMPORTANT

If you have cion number with letters like this: f1ea - Use just number without 'f' letter and use as string '1ea';
example:

#main {
	.icon(before, '1ea', solid, 16px);
	...
}

3) solid/regular/brand - We have three icons style types:
Use solid for filled icons.
Use regular for lined icons.
Use brand for brand icons (NOTE brand icon can NOT be regular or solid).

4) Icon Size uses Font size - font-size: inherit; by default; You can cahnge on what you need like just 16px, 10em or 10%
*/

.icon-prop {
	font: normal normal normal 14px/1 'Font Awesome 5 Free';
	display: inline-block;
	speak: none;
	font-size: inherit;
	font-style: normal;
	font-weight: normal;
	font-variant: normal;
	text-transform: none;
	line-height: 1;
	text-rendering: auto;

	/* Better Font Rendering =========== */
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}
/* Icon style solid, regular or brand icon */
.icon-style(@style) when (@style = solid) {
	font-family: 'Font Awesome 5 Free';
	font-weight: 900;
}
.icon-style(@style) when (@style = regular) {
	font-family: 'Font Awesome 5 Free';
	font-weight: 400;
}
.icon-style(@style) when (@style = brand) {
	font-family: 'Font Awesome 5 Brands';
	font-weight: 400;
}

.icon (@position, @icon, @icon-style: solid, @icon-size: inherit) when (@position = before) {
	&:before {
		.icon-prop();
		.icon-style(@icon-style);

		content: '\f@{icon}';
		font-size: @icon-size;
	}
}
.icon (@position, @icon, @icon-style, @icon-size: inherit) when (@position = after) {
	&:after {
		.icon-prop();
		.icon-style(@icon-style);

		content: '\f@{icon}';
		font-size: @icon-size;
	}
}

/* END ICONS mixin - fontawesome */

/* Buttons mixins properties START */
.button-prop() {
	cursor: pointer;
	// color: white;
	box-sizing: border-box;
	text-transform: uppercase;
	height: auto;
	text-decoration: none;
  font-size: 16px;
	font-weight: normal;
	line-height: 1em;
	// background: @secondaryColor;
	display: inline-flex;
	align-items: center;
	border: 0;

	.transition(all 0.3s);

	// .icon(after, 105, solid);

	// &:after {
	// 	font-size: 20px;
	// 	margin-left: 6px;
  //       margin-top: -1px;
	// }

	&:hover {
        background: @secondaryButtonCollor;
        // color: @primaryColor;
	}

}
.button-focus() {
	&:focus{
        outline: thin dotted;
        // color: @colorGray;
        box-shadow: none;
		    text-decoration: none;
    }
}
/* END Buttons mixins properties */
